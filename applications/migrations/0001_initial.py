# Generated by Django 5.1.5 on 2025-02-10 06:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company", models.CharField(max_length=255)),
                ("title", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("due", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("wishlist", "Wishlist"),
                            ("applied", "Applied"),
                            ("interviewing", "Interviewing"),
                            ("offered", "Offered"),
                            ("rejected", "Rejected"),
                        ],
                        default="wishlist",
                        max_length=15,
                    ),
                ),
                ("link", models.URLField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatusChange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("wishlist", "Wishlist"),
                            ("applied", "Applied"),
                            ("interviewing", "Interviewing"),
                            ("offered", "Offered"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("wishlist", "Wishlist"),
                            ("applied", "Applied"),
                            ("interviewing", "Interviewing"),
                            ("offered", "Offered"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=15,
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_changes",
                        to="applications.application",
                    ),
                ),
            ],
            options={
                "ordering": ["changed_at"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("company", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("hiring_manager", "Hiring Manager"),
                            ("reference", "Reference"),
                            ("recruiter", "Recruiter"),
                            ("interviewer", "Interviewer"),
                            ("other", "Other"),
                        ],
                        default="hiring_manager",
                        max_length=50,
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("email__isnull", False)),
                        fields=("user", "email"),
                        name="unique_user_email_if_exists",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("phone__isnull", False)),
                        fields=("user", "phone"),
                        name="unique_user_phone_if_exists",
                    ),
                ],
            },
        ),
    ]
